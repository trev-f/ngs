nextflow_process {

    name "Test Process HTSEQ_COUNT"
    script "modules/count/htseq_count.nf"
    process "HTSEQ_COUNT"

    test("HTSEQ_COUNT produces output file of counts with default params.") {

        when {
            params {}
            process {
                """
                input[0] = [
                    [sampleName: "SRR1066657_GSM1299413_WT_NR_A_Saccharomyces_cerevisiae_RNA-Seq_50000"],
                    file("https://github.com/trev-f/SRAlign-test/raw/rnaseq/data/alignments/SRR1066657_GSM1299413_WT_NR_A_Saccharomyces_cerevisiae_RNA-Seq_50000.sorted.bam")
                ]
                input[1] = "https://github.com/trev-f/SRAlign-test/raw/rnaseq/data/references/R64-1-1/annotations_I.gtf.gz"
                """
            }
        }

        then {
            assert process.success

            with(process.out.htseq_counts.get(0)) {
                assert size() == 2
                assert get(0).sampleName == "SRR1066657_GSM1299413_WT_NR_A_Saccharomyces_cerevisiae_RNA-Seq_50000"
                assert get(1) ==~ /^.*\/SRR1066657_GSM1299413_WT_NR_A_Saccharomyces_cerevisiae_RNA-Seq_50000.counts.txt$/
                assert path(get(1)).md5 == "9166eeb256b0be30ac2c4d2c3d5085fd"
            }

            assert snapshot(process.out).match()
        }

    }

}
